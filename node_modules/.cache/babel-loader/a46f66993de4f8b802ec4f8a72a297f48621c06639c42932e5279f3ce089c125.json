{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _toPropertyKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toPropertyKey\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _deepmerge = _interopRequireDefault(require(\"@mui/utils/deepmerge\"));\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\nconst _excluded = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {},\n      defaultColorScheme = 'light'\n    } = theme,\n    otherTheme = (0, _objectWithoutPropertiesLoose2.default)(theme, _excluded);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = (0, _cssVarsParser.default)(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      [defaultColorScheme]: light\n    } = colorSchemes,\n    otherColorSchemes = (0, _objectWithoutPropertiesLoose2.default)(colorSchemes, [defaultColorScheme].map(_toPropertyKey2.default));\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(scheme, parserConfig);\n    themeVars = (0, _deepmerge.default)(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (light) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(light, parserConfig);\n    themeVars = (0, _deepmerge.default)(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  const generateCssVars = colorScheme => {\n    var _parserConfig$getSele2;\n    if (!colorScheme) {\n      var _parserConfig$getSele;\n      const css = (0, _extends2.default)({}, rootCss);\n      return {\n        css,\n        vars: rootVars,\n        selector: (parserConfig == null || (_parserConfig$getSele = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele.call(parserConfig, colorScheme, css)) || ':root'\n      };\n    }\n    const css = (0, _extends2.default)({}, colorSchemesMap[colorScheme].css);\n    return {\n      css,\n      vars: colorSchemesMap[colorScheme].vars,\n      selector: (parserConfig == null || (_parserConfig$getSele2 = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele2.call(parserConfig, colorScheme, css)) || ':root'\n    };\n  };\n  return {\n    vars: themeVars,\n    generateCssVars\n  };\n}\nvar _default = exports.default = prepareCssVars;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_extends2","_toPropertyKey2","_objectWithoutPropertiesLoose2","_deepmerge","_cssVarsParser","_excluded","prepareCssVars","theme","parserConfig","colorSchemes","defaultColorScheme","otherTheme","vars","rootVars","css","rootCss","varsWithDefaults","rootVarsWithDefaults","themeVars","colorSchemesMap","light","otherColorSchemes","map","entries","forEach","key","scheme","generateCssVars","colorScheme","_parserConfig$getSele2","_parserConfig$getSele","selector","getSelector","call","_default"],"sources":["/Users/wangzhewei/Desktop/Sanxingdui/mui-with-react/node_modules/@mui/system/cssVars/prepareCssVars.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _toPropertyKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toPropertyKey\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _deepmerge = _interopRequireDefault(require(\"@mui/utils/deepmerge\"));\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\nconst _excluded = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {},\n      defaultColorScheme = 'light'\n    } = theme,\n    otherTheme = (0, _objectWithoutPropertiesLoose2.default)(theme, _excluded);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = (0, _cssVarsParser.default)(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      [defaultColorScheme]: light\n    } = colorSchemes,\n    otherColorSchemes = (0, _objectWithoutPropertiesLoose2.default)(colorSchemes, [defaultColorScheme].map(_toPropertyKey2.default));\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(scheme, parserConfig);\n    themeVars = (0, _deepmerge.default)(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (light) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(light, parserConfig);\n    themeVars = (0, _deepmerge.default)(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  const generateCssVars = colorScheme => {\n    var _parserConfig$getSele2;\n    if (!colorScheme) {\n      var _parserConfig$getSele;\n      const css = (0, _extends2.default)({}, rootCss);\n      return {\n        css,\n        vars: rootVars,\n        selector: (parserConfig == null || (_parserConfig$getSele = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele.call(parserConfig, colorScheme, css)) || ':root'\n      };\n    }\n    const css = (0, _extends2.default)({}, colorSchemesMap[colorScheme].css);\n    return {\n      css,\n      vars: colorSchemesMap[colorScheme].vars,\n      selector: (parserConfig == null || (_parserConfig$getSele2 = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele2.call(parserConfig, colorScheme, css)) || ':root'\n    };\n  };\n  return {\n    vars: themeVars,\n    generateCssVars\n  };\n}\nvar _default = exports.default = prepareCssVars;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}